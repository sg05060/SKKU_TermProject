CNN operation(Custom)

Input feature   : 4x4
Filter          : 3x3
Output feature  : 2x2

stage 1 - basic
a22     a23     a32     a33     b22
m       m       m       m       m
-------------------------------------

stage 2-1 - shift_down1
a21     a22     a31     a32     b12
m       s1      m       s1      m

=> m s1 m s1

stage 2-2 - shift_down1
a12     a13     a22     a23     b21
m       m       s1      s1      m

=> m m s1 s1

stage 2-3 - shift_down1
a23     a24     a33     a34     b32
s1      m       s1      m       m

=> s1 m s1 m 

stage 2-4 - shift_up1
a32     a33     a42     a43     b23
s1      s1      m       m       m

=> s1 s1 m m

-------------------------------------

stage 3-1 - shift_down1
a11     a12     a21     a22     b11
m       s2      s2      s1      m

=> m s2 s2 s1

stage 3-2 - shift_down2
a13     a14     a23     a24     b31
s2      m       s1      s2      m

=> s2 m s1 s2

stage 3-3 - stop
a33     a34     a43     a44     b33
s1      s2      s2      m       m

=> s1 s2 s2 m

stage 3-4 - shift_down2
a31     a32     a41     a42     b13
s2      s1      m       s2      m

=> s2 s1 m s2



=> m m m m 0000 00 

=> m s1 m s1 0101 00
=> m m s1 s1 0011 00
=> s1 m s1 m 1010 00
=> s1 s1 m m 1100 00


=> m s2 s2 s1 0101 10
=> s2 m s1 s2 0011 01
=> s1 s2 s2 m 1010 10
=> s2 s1 m s2 1100 01

stage1(m m m m)
1) weight_get               : buffer_en = 5'b10000, otherwise all zero
2) in_1_get, shift1_write1  :   buffer_en = 5'b01000, shift1_en = 4'b1000
3) in_2_get, shift1_write2  :   buffer_en = 5'b00100, shift1_en = 4'b0100
4) in_3_get, shift1_write3  :   buffer_en = 5'b00010, shift1_en = 4'b0010
5) in_4_get, shift1_write4  :   buffer_en = 5'b00001, shift1_en = 4'b0001
6) oper1                    :   acc = 1'b1

stage2-1(m s1 m s1 0101 00)
1) weight_get, shift1_shift             : buffer_en = 5'b10000, shift1_shifting = shift_down1
2) shift_out, in_1 get, shift2_2_write1 : buffer_en = 5'b01101, shift2-2_en = 4'b0001, mem_shift_mux = 4'b0101
3) in_3_get, shift2_1_write4            : buffer_en = 5'b00010, shift2-1_en = 4'b1000
4) oper2-1                              : acc = 1'b1

stage2-2(m m s1 s1 0011 00)
1) weight_get, shift1_shift             : buffer_en = 5'b10000, shift1_shifting = shift_down1
2) shift_out, in_1_get, shift2_1_write1 : buffer_en = 5'b01011, shift2-1_en = 4'b0001, mem_shift_mux = 4'b0011
3) in_2_get, shift2_1_write2            : buffer_en = 5'b00100, shift2_1_en = 4'b0010
4) oper2-2                              : acc = 1'b1

stage2-3(s1 m s1 m 1010 00)
1) weight_get, shift1_shift             : buffer_en = 5'b10000, shift1_shifting = shift_down2
2) shift_out, in_2_get, shift2_2_write2 : buffer_en = 5'b01110, shift2-2_en = 4'b0010, mem_shift_mux = 4'b1010
3) in_4_get, shift2_1_write3            : buffer_en = 5'b00001, shift2_1_en = 4'b0100
4) oper2-2                              : acc = 1'b1

stage2-4(s1 s1 m m 1100 00)
1) weight_get, shift1_shift             : buffer_en = 5'b10000, shift1_shifting = shift_up1
2) shift_out, in_3_get, shift2_2_write4 : buffer_en = 5'b01110, shift2-2_en = 4'b1000, mem_shift_mux = 4'b1100
3) in_4_get, shift2_2_write3            : buffer_en = 5'b00001, shift2_2_en = 4'b0100
4) oper2-4                              : acc = 1'b1

stage3-1(m s2 s2 s1 0101 10)
1) weight_get, shift2_shift, shift1_shift   : buffer_en = 5'b10000, shift2_shifting = 1'b0, shift1_shifting = shift_down1
2) shift_out, in_1_get, shift2_out          : buffer_en = 5'b01111, operand_mux23 = 1'b1, mem_shift_mux = 4'b0101
3) oper3-1                                  : acc = 1'b1

stage3-2(s2 m s1 s2 0011 01)
1) weight_get, shift2_shift, shift1_shift   : buffer_en = 5'b10000, shift2_shifting = 1'b1, shift1_shifting = shift_down2
2) shift_out, in_2_get, shift2_out          : buffer_en = 5'b01111, operand_mux14 = 1'b1, mem_shift_mux = 4'b0011
3) oper3-2                                  : acc = 1'b1

stage3-3(s1 s2 s2 m 1010 10)
1) weight_get, shift2_shift, shift1_shift   : buffer_en = 5'b10000, shift2_shifting = 1'b1, shift1_shifting = stop
2) shift_out, in_4_get, shift2_out          : buffer_en = 5'b01111, operand_mux23 = 1'b1, mem_shift_mux = 4'b1010
3) oper3-3                                  : acc = 1'b1

stage3-4(s2 s1 m s2 1100 01)
1) weight_get, shift2_shift, shift1_shift   : buffer_en = 5'b10000, shift2_shifting = 1'b1, shift1_shifting = shift_down2
2) shift_out, in_3_get, shift2_out          : buffer_en = 5'b01111, operand_mux14 = 1'b1, mem_shift_mux = 4'b1100
3) oper3-4                                  : acc = 1'b1
